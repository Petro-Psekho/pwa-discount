const discounts = [0, 5, 10, 15, 20];
const usernameInput = document.getElementById("username");
const loginBtn = document.getElementById("loginBtn");
const loginSection = document.getElementById("loginSection");
const appSection = document.getElementById("appSection");
const userNameDisplay = document.getElementById("userNameDisplay");
const result = document.getElementById("result");
const spinButton = document.getElementById("spinButton");
const historyList = document.getElementById("historyList");
const wheel = document.getElementById("wheel");

let user = null;

loginBtn.addEventListener("click", () => {
  const name = usernameInput.value.trim();
  if (name) {
    user = name;
    localStorage.setItem("pwa-user", user);
    showApp();
  }
});

function showApp() {
  loginSection.style.display = "none";
  appSection.style.display = "block";
  userNameDisplay.textContent = user;
  loadHistory();
}

function loadHistory() {
  historyList.innerHTML = "";
  const history = JSON.parse(localStorage.getItem(`history-${user}`)) || [];
  history.forEach((item) => {
    const li = document.createElement("li");
    li.textContent = `–°–∫–∏–¥–∫–∞: ${item}%`;
    historyList.appendChild(li);
  });
}

spinButton.addEventListener("click", () => {
  spinButton.disabled = true;
  const rotation = Math.floor(Math.random() * 360) + 720; // –º–∏–Ω–∏–º—É–º 2 –æ–±–æ—Ä–æ—Ç–∞
  wheel.style.transform = `rotate(${rotation}deg)`;

  // –û–ø—Ä–µ–¥–µ–ª–∏–º –≤—ã–∏–≥—Ä—ã—à —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
  setTimeout(() => {
    const index = Math.floor(Math.random() * discounts.length);
    const discount = discounts[index];

    if (discount === 0) {
      result.textContent = "–£–≤—ã, —Å–µ–≥–æ–¥–Ω—è –±–µ–∑ —Å–∫–∏–¥–∫–∏ üò¢";
    } else {
      result.innerHTML = `–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ <strong>${discount}%</strong> —Å–∫–∏–¥–∫–∏!<br><a href="https://example.com/product?discount=${discount}" target="_blank">–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç–æ–≤–∞—Ä—É</a>`;
    }

    // –ó–∞–ø–∏—Å—å –≤ –∏—Å—Ç–æ—Ä–∏—é
    const history = JSON.parse(localStorage.getItem(`history-${user}`)) || [];
    history.unshift(discount);
    localStorage.setItem(`history-${user}`, JSON.stringify(history));
    loadHistory();

    spinButton.disabled = false;
  }, 4000);
});

// Service Worker
if ("serviceWorker" in navigator) {
  window.addEventListener("load", () => {
    navigator.serviceWorker
      .register("service-worker.js")
      .then((registration) => {
        console.log("Service Worker –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω");

        registration.onupdatefound = () => {
          const newWorker = registration.installing;
          newWorker.onstatechange = () => {
            if (newWorker.state === "installed") {
              if (navigator.serviceWorker.controller) {
                console.log("–ù–∞–π–¥–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ. –û–±–Ω–æ–≤–ª—è–µ–º...");
                newWorker.postMessage({ action: "skipWaiting" });
              }
            }
          };
        };
      })
      .catch((err) => console.error("–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ SW:", err));
  });

  let refreshing;
  navigator.serviceWorker.addEventListener("controllerchange", () => {
    if (refreshing) return;
    window.location.reload();
    refreshing = true;
  });
}

// –ê–≤—Ç–æ–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
window.addEventListener("load", () => {
  const savedUser = localStorage.getItem("pwa-user");
  if (savedUser) {
    user = savedUser;
    showApp();
  }
});

// üö™ –í—ã—Ö–æ–¥
document.getElementById("logoutBtn").addEventListener("click", () => {
  localStorage.removeItem("pwa-user");
  location.reload();
});

// üíæ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
let deferredPrompt;
const installBtn = document.getElementById("installBtn");

window.addEventListener("beforeinstallprompt", (e) => {
  e.preventDefault();
  deferredPrompt = e;
  installBtn.style.display = "inline-block";

  installBtn.addEventListener("click", () => {
    if (deferredPrompt) {
      deferredPrompt.prompt();
      deferredPrompt.userChoice.then((choice) => {
        if (choice.outcome === "accepted") {
          console.log("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞");
        }
        deferredPrompt = null;
        installBtn.style.display = "none";
      });
    }
  });
});

// üîî Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
const notifyBtn = document.getElementById("notifyBtn");
notifyBtn.addEventListener("click", () => {
  Notification.requestPermission().then((perm) => {
    if (perm === "granted") {
      new Notification("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã üéâ", {
        body: "–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏!",
        icon: "/icons/icon-192.png",
      });
    } else {
      alert("–†–∞–∑—Ä–µ—à–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±—Ä–∞—É–∑–µ—Ä–∞");
    }
  });
});
